<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="2" failed="0" total="2" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="57" started-at="2016-03-26T18:36:48Z" finished-at="2016-03-26T18:36:48Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="57" started-at="2016-03-26T18:36:48Z" finished-at="2016-03-26T18:36:48Z">
      <class name="UnderAllAnnotations">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:UnderAllAnnotations@48140564]" name="beforeSuite" is-config="true" duration-ms="23" started-at="2016-03-27T00:06:48Z" finished-at="2016-03-27T00:06:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="SKIP" signature="beforeTest()[pri:0, instance:UnderAllAnnotations@48140564]" name="beforeTest" is-config="true" duration-ms="0" started-at="2016-03-27T00:06:48Z" finished-at="2016-03-27T00:06:48Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Threowing from before method]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Threowing from before method
	at UnderAllAnnotations.beforeTest(UnderAllAnnotations.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.TestRunner.beforeRun(TestRunner.java:656)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:113)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:206)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:177)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="SKIP" signature="beforeClass()[pri:0, instance:UnderAllAnnotations@48140564]" name="beforeClass" is-config="true" duration-ms="0" started-at="2016-03-27T00:06:48Z" finished-at="2016-03-27T00:06:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:UnderAllAnnotations@48140564]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2016-03-27T00:06:48Z" finished-at="2016-03-27T00:06:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="FirstTestScript()[pri:0, instance:UnderAllAnnotations@48140564]" name="FirstTestScript" duration-ms="1" started-at="2016-03-27T00:06:48Z" finished-at="2016-03-27T00:06:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FirstTestScript -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:UnderAllAnnotations@48140564]" name="afterMethod" is-config="true" duration-ms="0" started-at="2016-03-27T00:06:48Z" finished-at="2016-03-27T00:06:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:UnderAllAnnotations@48140564]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2016-03-27T00:06:48Z" finished-at="2016-03-27T00:06:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="SecondTestScript()[pri:0, instance:UnderAllAnnotations@48140564]" name="SecondTestScript" duration-ms="1" started-at="2016-03-27T00:06:48Z" finished-at="2016-03-27T00:06:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SecondTestScript -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:UnderAllAnnotations@48140564]" name="afterMethod" is-config="true" duration-ms="0" started-at="2016-03-27T00:06:48Z" finished-at="2016-03-27T00:06:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="afterClass()[pri:0, instance:UnderAllAnnotations@48140564]" name="afterClass" is-config="true" duration-ms="0" started-at="2016-03-27T00:06:48Z" finished-at="2016-03-27T00:06:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="SKIP" signature="afterTest()[pri:0, instance:UnderAllAnnotations@48140564]" name="afterTest" is-config="true" duration-ms="0" started-at="2016-03-27T00:06:48Z" finished-at="2016-03-27T00:06:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="SKIP" signature="afterSuite()[pri:0, instance:UnderAllAnnotations@48140564]" name="afterSuite" is-config="true" duration-ms="0" started-at="2016-03-27T00:06:48Z" finished-at="2016-03-27T00:06:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- UnderAllAnnotations -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
